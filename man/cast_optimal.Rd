% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cast_optimal.R
\name{cast_optimal}
\alias{cast_optimal}
\title{Find optimal clustering using Hubert's Gamma Statistic}
\usage{
cast_optimal(
  sim_mat,
  aff_range = c(0, 1),
  m = 4,
  min_range = 0.01,
  min_tol = 0.01
)
}
\arguments{
\item{sim_mat}{A square numeric matrix with values
in the range [0, 1]. 0 indicates maximimum
dissimilarity, 1 indicates perfect similarity.
The Diagonals are assumed to be 1, each element
should be identical to itself.}

\item{aff_range}{minimum and maximum aff_thres
to test. Best left as default to test the full
range.}

\item{min_range}{if aff_range is narrower than
`min_range`, stop and return the best aff_thres.}

\item{min_tol}{if the difference in Hubert's \Gamma
statistic scores between the worst and best aff_thres
for a run are less than `min_tol`, stop and
return the best aff_thres}

\item{npar}{number of values of aff_thres
to test each run. Must be >=3, but very large values
will slow down algorithm with no improvement in
accuracy.}
}
\description{
Given a similarity matrix `sim_mat`, where 1 is identical,
and 0 is completely dissimilar, finds an affinity
threshold that maximises Hubert's \Gamma statistic
(Tseng and Kao, 2003).
}
\details{
It is possible that Hubert's \Gamma statistic is
is optimised at aff_thres = mean(sim_mat) when
the diagonals are ignored, which would make
this function redundant.
}
